TERRAFORM PROVISIONERS:
LOCAL-EXEC:
resource "aws_instance" "one" {
ami = "ami-08fe5144e4659a3b3"
tags = {
Name = "Myserver"
}
instance_type = "t2.micro"
count = 1
provisioner "local-exec" {
command = "echo 'This is Instance ID ${aws_instance.one[0].id}' >> myinstance.txt"
}
}

REMOTE-EXEC
resource "aws_key_pair" "key" {
key_name = "terraform-kp"
public_key = file("/root/.ssh/id_rsa.pub")
}

resource "aws_instance" "one" {
ami = "ami-08fe5144e4659a3b3"
tags = {
Name = "Myserver"
}
key_name = aws_key_pair.key.key_name
vpc_security_group_ids = [aws_security_group.two.id]
instance_type = "t2.micro"
count = 1
provisioner "remote-exec" {
connection {
type = "ssh"
user = "ec2-user"
private_key = file("/root/.ssh/id_rsa")
host = self.public_ip
}
inline = [
"echo 'Hello world'",
"sudo yum install httpd -y",
"sudo systemctl start httpd"
]
}
}
TERRAFORM LIFECYCLE:
CREATE-BEFORE-DESTROY:
resource "aws_instance" "one" {
ami = "ami-08fe5144e4659a3b3"
tags = {
Name = "Myserver"
}
instance_type = "t2.micro"
count = 1
lifecycle {
create_before_destroy = true
}
}

PREVENT-DESTROY:
resource "aws_instance" "one" {
ami = "ami-08fe5144e4659a3b3"
tags = {
Name = "Myserver"
}
instance_type = "t2.micro"
count = 1
lifecycle {
prevent_destroy = true
}
}

IGNORE-CHANGES:
resource "aws_instance" "one" {
ami = "ami-08fe5144e4659a3b3"
tags = {
Name = "Myserver"
}
instance_type = "t2.micro"
count = 1
lifecycle {
ignore_changes = [instance_type, ami]
}
}
